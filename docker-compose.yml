services:
  mongo:
    image: mongo
    restart: always
    volumes:
      - /data/db:/data/db
    logging:
      options:
        max-size: '10m'
        max-size: '2'

  api:
    build:
      context: api
    restart: always
    depends_on:
      - mongo
    volumes:
      - api-build:/opt/application/api-build
      - /data/storage:/data/storage
    env_file: api/production.env
    healthcheck:
      test: curl -s -w '%{http_code}' http://localhost:3000/api/describe
      timeout: 5s
      interval: 10s

  web:
    build:
      context: web
    depends_on:
      api:
        condition: service_healthy
    volumes:
      - api-build:/opt/application/api
      - web-build:/var/www/html

  nginx:
    build:
      context: nginx
    restart: always
    depends_on:
      - api
      - web
    ports:
      - 80:80
    volumes:
      - web-build:/var/www/html
    logging:
      options:
        max-size: '2G'
        max-size: '4'

volumes:
  api-build:
  web-build:

